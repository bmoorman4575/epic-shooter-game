{
  "version": 3,
  "sources": ["../../../../../../../Extensions/3D/Base3DBehavior.ts"],
  "sourcesContent": ["/*\n * GDevelop JS Platform\n * Copyright 2013-2023 Florian Rival (Florian.Rival@gmail.com). All rights reserved.\n * This project is released under the MIT License.\n */\nnamespace gdjs {\n  export interface Base3DHandler {\n    /**\n     * Set the object position on the Z axis.\n     */\n    setZ(z: float): void;\n\n    /**\n     * Get the object position on the Z axis.\n     */\n    getZ(): float;\n\n    /**\n     * Set the object rotation on the X axis.\n     *\n     * This is an Euler angle. Objects use the `ZYX` order.\n     *\n     * @param angle the rotation angle on the X axis in degree\n     */\n    setRotationX(angle: float): void;\n\n    /**\n     * Set the object rotation on the Y axis.\n     *\n     * This is an Euler angle. Objects use the `ZYX` order.\n     *\n     * @param angle the rotation angle on the Y axis in degree\n     */\n    setRotationY(angle: float): void;\n\n    /**\n     * Get the object rotation on the X axis in degree.\n     *\n     * This is an Euler angle. Objects use the `ZYX` order.\n     */\n    getRotationX(): float;\n\n    /**\n     * Get the object rotation on the Y axis in degree.\n     *\n     * This is an Euler angle. Objects use the `ZYX` order.\n     */\n    getRotationY(): float;\n\n    /**\n     * Turn the object around the scene X axis at its center.\n     * @param deltaAngle the rotation angle in degree\n     */\n    turnAroundX(deltaAngle: float): void;\n\n    /**\n     * Turn the object around the scene Y axis at its center.\n     * @param deltaAngle the rotation angle in degree\n     */\n    turnAroundY(deltaAngle: float): void;\n\n    /**\n     * Turn the object around the scene Z axis at its center.\n     * @param deltaAngle the rotation angle in degree\n     */\n    turnAroundZ(deltaAngle: float): void;\n\n    /**\n     * Get the object size on the Z axis (called \"depth\").\n     */\n    getDepth(): float;\n\n    /**\n     * Set the object size on the Z axis (called \"depth\").\n     */\n    setDepth(depth: float): void;\n\n    /**\n     * Change the scale on Z axis of the object (changing its depth).\n     *\n     * @param newScale The new scale (must be greater than 0).\n     */\n    setScaleZ(newScale: number): void;\n\n    /**\n     * Get the scale of the object on Z axis.\n     *\n     * @return the scale of the object on Z axis\n     */\n    getScaleZ(): float;\n\n    flipZ(enable: boolean): void;\n\n    isFlippedZ(): boolean;\n  }\n\n  /**\n   * A behavior that forwards the Base3D interface to its object.\n   */\n  export class Base3DBehavior\n    extends gdjs.RuntimeBehavior\n    implements Base3DHandler {\n    private object: gdjs.RuntimeObject & Base3DHandler;\n\n    constructor(\n      instanceContainer: gdjs.RuntimeInstanceContainer,\n      behaviorData,\n      owner: gdjs.RuntimeObject & Base3DHandler\n    ) {\n      super(instanceContainer, behaviorData, owner);\n      this.object = owner;\n    }\n\n    updateFromBehaviorData(oldBehaviorData, newBehaviorData): boolean {\n      // Nothing to update.\n      return true;\n    }\n\n    onDeActivate() {}\n\n    onDestroy() {}\n\n    doStepPreEvents(instanceContainer: gdjs.RuntimeInstanceContainer) {}\n\n    doStepPostEvents(instanceContainer: gdjs.RuntimeInstanceContainer) {}\n\n    setZ(z: float): void {\n      this.object.setZ(z);\n    }\n\n    getZ(): float {\n      return this.object.getZ();\n    }\n\n    setRotationX(angle: float): void {\n      this.object.setRotationX(angle);\n    }\n\n    setRotationY(angle: float): void {\n      this.object.setRotationY(angle);\n    }\n\n    getRotationX(): float {\n      return this.object.getRotationX();\n    }\n\n    getRotationY(): float {\n      return this.object.getRotationY();\n    }\n\n    turnAroundX(deltaAngle: float): void {\n      this.object.turnAroundX(deltaAngle);\n    }\n\n    turnAroundY(deltaAngle: float): void {\n      this.object.turnAroundY(deltaAngle);\n    }\n\n    turnAroundZ(deltaAngle: float): void {\n      this.object.turnAroundZ(deltaAngle);\n    }\n\n    getDepth(): float {\n      return this.object.getDepth();\n    }\n\n    setDepth(depth: float): void {\n      this.object.setDepth(depth);\n    }\n\n    setScaleZ(newScale: number): void {\n      this.object.setScaleZ(newScale);\n    }\n\n    getScaleZ(): float {\n      return this.object.getScaleZ();\n    }\n\n    flipZ(enable: boolean): void {\n      this.object.flipZ(enable);\n    }\n\n    isFlippedZ(): boolean {\n      return this.object.isFlippedZ();\n    }\n  }\n\n  gdjs.registerBehavior('Scene3D::Base3DBehavior', gdjs.Base3DBehavior);\n}\n"],
  "mappings": "AAKA,GAAU,MAAV,UAAU,EAAV,CA8FS,eACG,GAAK,eACY,CAGzB,YACE,EACA,EACA,EACA,CACA,MAAM,EAAmB,EAAc,GACvC,KAAK,OAAS,EAGhB,uBAAuB,EAAiB,EAA0B,CAEhE,MAAO,GAGT,cAAe,EAEf,WAAY,EAEZ,gBAAgB,EAAkD,EAElE,iBAAiB,EAAkD,EAEnE,KAAK,EAAgB,CACnB,KAAK,OAAO,KAAK,GAGnB,MAAc,CACZ,MAAO,MAAK,OAAO,OAGrB,aAAa,EAAoB,CAC/B,KAAK,OAAO,aAAa,GAG3B,aAAa,EAAoB,CAC/B,KAAK,OAAO,aAAa,GAG3B,cAAsB,CACpB,MAAO,MAAK,OAAO,eAGrB,cAAsB,CACpB,MAAO,MAAK,OAAO,eAGrB,YAAY,EAAyB,CACnC,KAAK,OAAO,YAAY,GAG1B,YAAY,EAAyB,CACnC,KAAK,OAAO,YAAY,GAG1B,YAAY,EAAyB,CACnC,KAAK,OAAO,YAAY,GAG1B,UAAkB,CAChB,MAAO,MAAK,OAAO,WAGrB,SAAS,EAAoB,CAC3B,KAAK,OAAO,SAAS,GAGvB,UAAU,EAAwB,CAChC,KAAK,OAAO,UAAU,GAGxB,WAAmB,CACjB,MAAO,MAAK,OAAO,YAGrB,MAAM,EAAuB,CAC3B,KAAK,OAAO,MAAM,GAGpB,YAAsB,CACpB,MAAO,MAAK,OAAO,cApFhB,EAAM,iBAwFb,EAAK,iBAAiB,0BAA2B,EAAK,kBAtL9C",
  "names": []
}
