{
  "version": 3,
  "sources": ["../../../../../../../Extensions/3D/Model3DRuntimeObject3DRenderer.ts"],
  "sourcesContent": ["namespace gdjs {\n  type FloatPoint3D = [float, float, float];\n\n  const removeMetalness = (material: THREE.Material): void => {\n    //@ts-ignore\n    if (material.metalness) {\n      //@ts-ignore\n      material.metalness = 0;\n    }\n  };\n\n  const removeMetalnessFromMesh = (node: THREE.Object3D<THREE.Event>) => {\n    const mesh = node as THREE.Mesh;\n    if (!mesh.material) {\n      return;\n    }\n    if (Array.isArray(mesh.material)) {\n      for (let index = 0; index < mesh.material.length; index++) {\n        removeMetalness(mesh.material[index]);\n      }\n    } else {\n      removeMetalness(mesh.material);\n    }\n  };\n\n  const traverseToRemoveMetalnessFromMeshes = (\n    node: THREE.Object3D<THREE.Event>\n  ) => node.traverse(removeMetalnessFromMesh);\n\n  const convertToBasicMaterial = (\n    material: THREE.Material\n  ): THREE.MeshBasicMaterial => {\n    const basicMaterial = new THREE.MeshBasicMaterial();\n    //@ts-ignore\n    if (material.color) {\n      //@ts-ignore\n      basicMaterial.color = material.color;\n    }\n    //@ts-ignore\n    if (material.map) {\n      //@ts-ignore\n      basicMaterial.map = material.map;\n    }\n    return basicMaterial;\n  };\n\n  const setBasicMaterialTo = (node: THREE.Object3D<THREE.Event>): void => {\n    const mesh = node as THREE.Mesh;\n    if (!mesh.material) {\n      return;\n    }\n\n    if (Array.isArray(mesh.material)) {\n      for (let index = 0; index < mesh.material.length; index++) {\n        mesh.material[index] = convertToBasicMaterial(mesh.material[index]);\n      }\n    } else {\n      mesh.material = convertToBasicMaterial(mesh.material);\n    }\n  };\n\n  const traverseToSetBasicMaterialFromMeshes = (\n    node: THREE.Object3D<THREE.Event>\n  ) => node.traverse(setBasicMaterialTo);\n\n  class Model3DRuntimeObject3DRenderer extends gdjs.RuntimeObject3DRenderer {\n    private _model3DRuntimeObject: gdjs.Model3DRuntimeObject;\n    /**\n     * The 3D model stretched in a 1x1x1 cube.\n     */\n    private _threeObject: THREE.Object3D;\n    private _originalModel: THREE_ADDONS.GLTF;\n    private _animationMixer: THREE.AnimationMixer;\n    private _action: THREE.AnimationAction | null;\n\n    /**\n     * The model origin evaluated according to the object configuration.\n     *\n     * Coordinates are between 0 and 1.\n     */\n    private _modelOriginPoint: FloatPoint3D;\n\n    constructor(\n      runtimeObject: gdjs.Model3DRuntimeObject,\n      instanceContainer: gdjs.RuntimeInstanceContainer\n    ) {\n      // GLB files with skeleton must not have any transformation to work properly.\n      const originalModel = instanceContainer\n        .getGame()\n        .getModel3DManager()\n        .getModel(runtimeObject._modelResourceName);\n      // _updateModel will actually add a clone of the model.\n      const model = new THREE.Group();\n\n      // Create a group to transform the object according to\n      // position, angle and dimensions.\n      const group = new THREE.Group();\n      group.rotation.order = 'ZYX';\n      group.add(model);\n      super(runtimeObject, instanceContainer, group);\n\n      this._model3DRuntimeObject = runtimeObject;\n      this._threeObject = model;\n      this._originalModel = originalModel;\n      this._modelOriginPoint = [0, 0, 0];\n\n      this.updateSize();\n      this.updatePosition();\n      this.updateRotation();\n\n      this._animationMixer = new THREE.AnimationMixer(model);\n      this._action = null;\n    }\n\n    updateAnimation(timeDelta: float) {\n      this._animationMixer.update(timeDelta);\n    }\n\n    updatePosition() {\n      const originPoint = this.getOriginPoint();\n      const centerPoint = this.getCenterPoint();\n      this.get3DRendererObject().position.set(\n        this._object.getX() -\n          this._object.getWidth() * (originPoint[0] - centerPoint[0]),\n        this._object.getY() -\n          this._object.getHeight() * (originPoint[1] - centerPoint[1]),\n        this._object.getZ() -\n          this._object.getDepth() * (originPoint[2] - centerPoint[2])\n      );\n    }\n\n    getOriginPoint() {\n      return this._model3DRuntimeObject._originPoint || this._modelOriginPoint;\n    }\n\n    getCenterPoint() {\n      return this._model3DRuntimeObject._centerPoint || this._modelOriginPoint;\n    }\n\n    private _updateDefaultTransformation(\n      threeObject: THREE.Object3D,\n      rotationX: float,\n      rotationY: float,\n      rotationZ: float,\n      originalWidth: float,\n      originalHeight: float,\n      originalDepth: float,\n      keepAspectRatio: boolean\n    ) {\n      threeObject.rotation.set(\n        gdjs.toRad(rotationX),\n        gdjs.toRad(rotationY),\n        gdjs.toRad(rotationZ)\n      );\n      threeObject.updateMatrixWorld(true);\n      const boundingBox = new THREE.Box3().setFromObject(threeObject);\n\n      const modelWidth = boundingBox.max.x - boundingBox.min.x;\n      const modelHeight = boundingBox.max.y - boundingBox.min.y;\n      const modelDepth = boundingBox.max.z - boundingBox.min.z;\n      this._modelOriginPoint[0] = -boundingBox.min.x / modelWidth;\n      this._modelOriginPoint[1] = -boundingBox.min.y / modelHeight;\n      this._modelOriginPoint[2] = -boundingBox.min.z / modelDepth;\n\n      // The model is flipped on Y axis.\n      this._modelOriginPoint[1] = 1 - this._modelOriginPoint[1];\n\n      // Center the model.\n      const centerPoint = this._model3DRuntimeObject._centerPoint;\n      if (centerPoint) {\n        threeObject.position.set(\n          -(\n            boundingBox.min.x +\n            (boundingBox.max.x - boundingBox.min.x) * centerPoint[0]\n          ),\n          // The model is flipped on Y axis.\n          -(\n            boundingBox.min.y +\n            (boundingBox.max.y - boundingBox.min.y) * (1 - centerPoint[1])\n          ),\n          -(\n            boundingBox.min.z +\n            (boundingBox.max.z - boundingBox.min.z) * centerPoint[2]\n          )\n        );\n      }\n\n      // Rotate the model.\n      threeObject.scale.set(1, 1, 1);\n      threeObject.rotation.set(\n        gdjs.toRad(rotationX),\n        gdjs.toRad(rotationY),\n        gdjs.toRad(rotationZ)\n      );\n\n      // Stretch the model in a 1x1x1 cube.\n      const scaleX = 1 / modelWidth;\n      const scaleY = 1 / modelHeight;\n      const scaleZ = 1 / modelDepth;\n\n      const scaleMatrix = new THREE.Matrix4();\n      // Flip on Y because the Y axis is on the opposite side of direct basis.\n      // It avoids models to be like a mirror refection.\n      scaleMatrix.makeScale(scaleX, -scaleY, scaleZ);\n      threeObject.updateMatrix();\n      threeObject.applyMatrix4(scaleMatrix);\n\n      if (keepAspectRatio) {\n        // Reduce the object dimensions to keep aspect ratio.\n        const widthRatio = originalWidth / modelWidth;\n        const heightRatio = originalHeight / modelHeight;\n        const depthRatio = originalDepth / modelDepth;\n        const scaleRatio = Math.min(widthRatio, heightRatio, depthRatio);\n\n        this._object._setOriginalWidth(scaleRatio * modelWidth);\n        this._object._setOriginalHeight(scaleRatio * modelHeight);\n        this._object._setOriginalDepth(scaleRatio * modelDepth);\n      }\n    }\n\n    _updateModel(\n      rotationX: float,\n      rotationY: float,\n      rotationZ: float,\n      originalWidth: float,\n      originalHeight: float,\n      originalDepth: float,\n      keepAspectRatio: boolean\n    ) {\n      // Start from the original model because:\n      // - _replaceMaterials is destructive\n      // - _updateDefaultTransformation may need to work with meshes in local space\n\n      // This group hold the rotation defined by properties.\n      const threeObject = new THREE.Group();\n      threeObject.rotation.order = 'ZYX';\n      const root = THREE_ADDONS.SkeletonUtils.clone(this._originalModel.scene);\n      threeObject.add(root);\n\n      this._replaceMaterials(threeObject);\n\n      this._updateDefaultTransformation(\n        threeObject,\n        rotationX,\n        rotationY,\n        rotationZ,\n        originalWidth,\n        originalHeight,\n        originalDepth,\n        keepAspectRatio\n      );\n\n      // Replace the 3D object.\n      this.get3DRendererObject().remove(this._threeObject);\n      this.get3DRendererObject().add(threeObject);\n      this._threeObject = threeObject;\n\n      // Start the current animation on the new 3D object.\n      this._animationMixer = new THREE.AnimationMixer(root);\n      const isAnimationPaused = this._model3DRuntimeObject.isAnimationPaused();\n      this._model3DRuntimeObject.setAnimationIndex(\n        this._model3DRuntimeObject.getAnimationIndex()\n      );\n      if (isAnimationPaused) {\n        this.pauseAnimation();\n      }\n    }\n\n    /**\n     * Replace materials to better work with lights (or no light).\n     */\n    private _replaceMaterials(threeObject: THREE.Object3D) {\n      if (\n        this._model3DRuntimeObject._materialType ===\n        gdjs.Model3DRuntimeObject.MaterialType.StandardWithoutMetalness\n      ) {\n        traverseToRemoveMetalnessFromMeshes(threeObject);\n      } else if (\n        this._model3DRuntimeObject._materialType ===\n        gdjs.Model3DRuntimeObject.MaterialType.Basic\n      ) {\n        traverseToSetBasicMaterialFromMeshes(threeObject);\n      }\n    }\n\n    getAnimationCount() {\n      return this._originalModel.animations.length;\n    }\n\n    getAnimationName(animationIndex: integer) {\n      return this._originalModel.animations[animationIndex].name;\n    }\n\n    /**\n     * Return true if animation has ended.\n     * The animation had ended if:\n     * - it's not configured as a loop;\n     * - the current frame is the last frame;\n     * - the last frame has been displayed long enough.\n     */\n    hasAnimationEnded(): boolean {\n      if (!this._action) {\n        return true;\n      }\n      return !this._action.isRunning();\n    }\n\n    animationPaused() {\n      if (!this._action) {\n        return;\n      }\n      return this._action.paused;\n    }\n\n    pauseAnimation() {\n      if (!this._action) {\n        return;\n      }\n      this._action.paused = true;\n    }\n\n    resumeAnimation() {\n      if (!this._action) {\n        return;\n      }\n      this._action.paused = false;\n    }\n\n    playAnimation(animationName: string, shouldLoop: boolean) {\n      this._animationMixer.stopAllAction();\n      const clip = THREE.AnimationClip.findByName(\n        this._originalModel.animations,\n        animationName\n      );\n      if (!clip) {\n        console.error(\n          `The GLB file: ${this._model3DRuntimeObject._modelResourceName} doesn't have any animation named: ${animationName}`\n        );\n        return;\n      }\n      this._action = this._animationMixer.clipAction(clip);\n      this._action.setLoop(\n        shouldLoop ? THREE.LoopRepeat : THREE.LoopOnce,\n        Number.POSITIVE_INFINITY\n      );\n      this._action.clampWhenFinished = true;\n      this._action.play();\n      // Make sure the first frame is displayed.\n      this._animationMixer.update(0);\n    }\n  }\n\n  export const Model3DRuntimeObjectRenderer = Model3DRuntimeObject3DRenderer;\n  export type Model3DRuntimeObjectRenderer = Model3DRuntimeObject3DRenderer;\n}\n"],
  "mappings": "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",
  "names": []
}
